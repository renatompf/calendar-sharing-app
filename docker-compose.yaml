services:

  postgres:
    image: postgres:16.4
    container_name: postgres
    environment:
      POSTGRES_DB: csa_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "csa_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  maildev:
    image: maildev/maildev
    restart: always
    environment:
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - my-network

  csa-api:
    container_name: csa-api
    build:
      context: .
      dockerfile: csa-api/Dockerfile  # Point to csa-core Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - my-network

  csa-mail-sender:
    container_name: csa-mail-sender
    build:
      context: .
      dockerfile: csa-mail-sender/Dockerfile  # Point to csa-mail-sender Dockerfile
    environment:
      MAIL_HOST: maildev
      MAIL_PORT: 1025
      MAIL_USERNAME: root
      MAIL_PASSWORD: root
      RABBITMQ_HOST: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - my-network

networks:
  my-network: