BEGIN;

CREATE SEQUENCE IF NOT EXISTS verification_token_sequence START WITH 1 INCREMENT BY 1;

CREATE TABLE role
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE token
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token   TEXT                                    NOT NULL,
    type    VARCHAR(10)                             NOT NULL,
    expired BOOLEAN                                 NOT NULL,
    revoked BOOLEAN                                 NOT NULL,
    user_id UUID,
    CONSTRAINT pk_token PRIMARY KEY (id)
);

CREATE TABLE user_roles
(
    role_id BIGINT NOT NULL,
    user_id UUID   NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id              UUID NOT NULL,
    first_name      VARCHAR(50),
    last_name       VARCHAR(50),
    hash            VARCHAR(255),
    email_validated BOOLEAN,
    email           VARCHAR(255),
    birth_date      date,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE verification_token
(
    id           BIGINT                      NOT NULL,
    token        VARCHAR(255)                NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    expires_at   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    confirmed_at TIMESTAMP WITHOUT TIME ZONE,
    user_id      UUID                        NOT NULL,
    CONSTRAINT pk_verification_token PRIMARY KEY (id)
);

ALTER TABLE token
    ADD CONSTRAINT FK_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE verification_token
    ADD CONSTRAINT FK_VERIFICATION_TOKEN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_role FOREIGN KEY (role_id) REFERENCES role (id);

ALTER TABLE user_roles
    ADD CONSTRAINT fk_userol_on_user FOREIGN KEY (user_id) REFERENCES users (id);

INSERT INTO role(id, name)
VALUES (1,  'ROLE_ADMIN'), (2, 'ROLE_USER');

COMMIT;